\documentclass[a4paper]{article}
\usepackage{listings}
\usepackage{inconsolata}
\usepackage{courier}
\usepackage{setspace}
\usepackage{hyperref}
\begin{document}
\SweaveOpts{concordance=TRUE}
\setlength{\parskip}{.5cm}
\title{An introduction to \texttt{capm}: an R package for companion animal population management}
\author{Oswaldo Santos, Fernando Marques,\\ Marcos Amaku and Fernando Ferreira}
\date{May 24, 2013}
\maketitle 
\begin{center}
oswaldosant@gmail.com
\end{center}

Human-companion animal interaction is a non free of problems ubiquitous phenomenon. To avoid adverse consequences in public health and animal welfare contexts, it is essential to have companion animal population management programs, focused on responsible ownership. Although there had been multiple initiatives around the world to control animal populations, the effect of those initiatives is unknown in most of the cases and the problem is still present. Academic claims regarding the lack of data can be found in literature since 1990s and nowadays, the need of objective assessments is a consensus. 

The \texttt{capm} package is an initiative to guide and automate quantitative analysis relevant for companion animal population management. For the first version of \texttt{capm} (0.01-1), functions can be broadly categorized in two groups:\\
\begin{itemize}
\item Survey design and demographic characterization.
\item Intervention-oreinted models in population dynamics.
\end{itemize}

The \texttt{capm} package is intended for specific analysis under a predefined workflow. Those interested in the implementation of new models or survey designs may want to consult available options in other packages (see for example: \texttt{deSolve, FME, rootSolve, GillespieSSA and survey}).

The objective of this mansucript is to present a worked example which ilustrate the workflow that can be facilitated by \texttt{capm} package. Deitailed options of functions are not discussed but the reader can consult their help pages. The example combine real spatial data from Santos district (Brazil) and hypotetical dog demographic data. Why hypoyhetical data? Previous (Amaku et al., 2009; 2010; Ferreira 2010) and ongoing (Santos, 2013) studies of our research group did not take in to account variables that now we deem that must be assessed to better understand and guide population management programs. Therfore, we simulated data hopefully will serve as a guide for future studies. 

We are aware of the limitations imposed by lack of different resources to support population management programs, a fact that often result in incomplete datasets. This situation is  addresed in the example and consequences of completeing datasets with "guess" estimates are quantified.

The \texttt{capm} package version 0.01-1 is an instance of the evolution of companion animal population management and this means that it is a process (infinitely) far to be finished. The feedback to improve available functions and suggest new ones certanly will produce great advances in the package evolution.

The developement version is available on \url{https://github.com/oswaldosantos}. Additional documentation such as tutorials and even a shiny ("point and click") interface will also be available in this site.

\section{Population study of owned dogs in urban area of Santos district}

In this worked example, a pilot study will be designed to estimate the total number of dogs per household and with this variable, the sample size and composition of a complex sample design will be estimated. Using sample data, demographic characteristics of owned dogs will be estimated and then, population dynamics will be modeled to assess the effect of current dog population management strategies. Global and local sensitivity analysis will be made to quantify the importance of all variables, including those which where not considered in the sample design. In this way, prarameters can be ranked to guide the definition of intervention priorities. Finally, intervention scenarios will be simulated to assess the effect of differente strategies.

\subsection{Pilot study}
To begin, define the composition of a two-stage cluster sampling design of arbitrary (expereince-based) size, selecting 20 primary sampling units (psu) with probability proportional to size and with replacement (ppsr). Within each psu, select 5 secondary sampling units (ssu) through systematic sampling. psu and ssu correspond to census tracks (setores censit\'{a}rios in portuguese) and households (domic\'{i}lios in portuguese) respectively.

In the web page of the Instituto Brasileiro de Geografia e Estat\'{i}stica \url{www.ibge.gov.br} it is possible to download the shapefiles and spreadsheets of the 2010 national census. Subsets of the needed data are included in the \texttt{capm} datasets and will be used for the sake of simplicty.

The first step is to load the \texttt{capm} package.
<<load capm>>=
library(capm)
@


Load the \texttt{psu.ssu} file which contain a list of all psu and their sizes.
<<load psu.ssu, echo=TRUE>>=
data(psu.ssu)
@

The id of each psu is in the first column and the number of ssu (its size) in the second one.

<<look psu.ssu>>=
str(psu.ssu)
print(head(psu.ssu), digits = 15)
@

Select 20 psu with ppsr. If you want a *.csv file with the results, set \texttt{write} equal to \texttt{TRUE}.
<<pilot ppssr>>=
selected.psu = ppssr(psu.ssu, 20)
head(selected.psu)
@

In each of the selected psu, select 5 ssu through systematic sampling. Again, you can get a *.csv file with the results.
<<pilot siss>>=
selected.ssu = siss(selected.psu, 5)
@

Let's see the first 3 psu. Note that you have the specific ssu that must be surveyed.
<<selected.ssu>>=
selected.ssu[, 1:3]
@

Create *.kml files to see on GoogleEarths those psu that must be surveyed. Keep in mind that the \texttt{mplyer} object is just the name of the file and in case it is in a directory other than the current working directory, the path to the file muste be specified. In this case, we specify a \texttt{capm} file.
<<pilot kml>>=
mplyer <- system.file('shp/santos.shp', package="capm")
#psukml(mplyer, selected.psu[, 1], 1)
@

Supose that you made the pilot and are ready to work on the final survey. Fisrt, take a look of the collected data. Remember that each row represent a household.
<<pilot>>=
data(pilot)
str(pilot)
head(pilot)
@

\subsection{Final survey}
Calculate the sample size and composition for the final survey using the defaults for \texttt{clus2}.
<<clus2>>=
clus2(psu.ssu, pilot, level = 0.95, error = 0.1, cost = 12)
@

Select psu and ssu acording to previous results and create *.kml files. To avoid name conflicts with *.kml files of the pilot, move this files to other folder or delete them before creating the new files.
<<final survey>>=
f.selected.psu = ppssr(psu.ssu, 20)
f.selected.ssu = siss(f.selected.psu, 5)
psukml(mplyer, f.selected.psu[, 1], 1)
@

Review the survey data before proceding.
<<Sample>>=
data(Sample)
str(Sample)
?Sample
@

\subsection{Population pyramids}
You can build population pyramids conditioned on age and sex or even on age, sex and reproductive status (castration). Just specify the \texttt{Sample} columns which contain this variables.
<<>>=
pyramid(Sample, col.age = 5, col.sex = 4)
@
\begin{center}
<<pyramids1, fig=TRUE, echo=FALSE>>=
print(pyramid(Sample, col.age = 5, col.sex = 4))
@
\end{center}
<<>>=
pyramid(Sample, col.age = 5, col.sex = 4, col.cas = 6)
@
\begin{center}
<<pyramids2, fig=TRUE, echo=FALSE>>=
print(pyramid(Sample, col.age = 5, col.sex = 4, col.cas = 6))
@
\end{center}
\subsection{Estimates}
Now you are in position to estimate demographic parameters.

Specify the two-stage cluster design. For this, indicate the columns of \texttt{psu.ssu} containing the psu and ssu.
<<design>>=
(design = svyd2(psu.ssu, Sample, psu.col = 2, ssu.col = 1))
@

Look at the variables contained in the survey design.
<<>>=
names(design$variables)
@

Specify the type of estimate for each variable. As shown by the previous command, the first two and the last two variables are not to be estimated. Thus, use empty quotes to ingore it.
<<type estimates>>=
variables = c("", "", "total", "prop", "mean", rep("prop", 3), 
              "total", rep("prop", 3), "", "")
@

Make sure you specify the correct type of estimate for each variable.
<<>>=
cbind(names(design$variables), variables)
@

Calculate the summary statistics for the survey.
<<estimates>>=
(estimates = svysumm(design, variables = variables, rnd = 3))
@

Estimates for subsets are also possible. For total estimates of \texttt{factor} variables, first transform it to \texttt{numeric}.
<<sex estimates>>=
sample1 = Sample[, c(1:4, 6:7, 11)]
sample1[, 5] = as.character(sample1[, 5])
sample1[which(sample1$castrated == "yes"), 5] = 1
sample1[which(sample1[, 5] == "no"), 5] = 0
sample1[, 5] = as.numeric(sample1[, 5])
@

Define the survey design in the usual way and then subset as required.
<<design subsets>>=
design.sex = svyd2(psu.ssu, sample1,
                   psu.col = 2,
                   ssu.col = 1)
design.f = subset(design.sex, sex == 'Female')
design.m = subset(design.sex, sex == 'Male')
@

From here, procede as with previous estimates.
<<sex summaries>>=
names(design.sex$variables)
variables.sex = c("", "", "total", "", "total",
                  "prop", "prop", "", "")
cbind(names(design.sex$variables), variables.sex)
(estimates.f = svysumm(design.f, variables.sex, rnd = 3))
(estimates.m = svysumm(design.m, variables.sex, rnd = 3))
@

\subsection{Population dynamics based on point estimates}
To model population dynamics, you will consider both, owned and stray populations.

You do not have information for the stray population and even for the owned one, you do not have all the information requiered to build the model. This is a common situation but does not mean you have to finish your analysis here (unless you want). You can replace the lacking statistical estiamtes, by "guesses" or expert estimates. In any case, the consequences of this will can (and must) be assessed.

First, define the state variables and parameters required by the model (you may want to see the help page of \texttt{iasa} function). 

The next is a posibility:

<<iasa state>>=
state.iasa = c(
   f1 = 33425.19, cf1 = 10864.901,
   m1 = 38038.96, cm1 = 6807.759,
   f2 = 3342.519, cf2 = 108.64901,
   m2 = 3803.896, cm2 = 68.07759
)
@

The number of owned intect females and males and the proportion that were castrated (\texttt{f1, m1}) were obtained from \texttt{estimates} object previously created. For stray intact and castrated animals, sizes were defined as 10 \% and 1 \% of the owned animals respectively. This is a conservative estimate, taking into consideration studies that have estimated this proportion as 5 \% from field data. For strays, the proportion of castrated individuals was arbitrary set as 5 \%.

<<iasa pars>>=
pars.iasa = c(
   b1 = 21870.897, b2 = 4374.179,
   df1 = 0.104, dm1 = 0.098, df2 = 0.1248, dm2 = 0.1176,
   sf1 = 0.069, sf2 = 0.05, sm1 = 0.028, sm2 = 0.05,
   k1 = 98050.49, k2 = 8055.456, h1 = 1, h2 = .5,
   ab = 0.054, ad = 0.1, v = 0.1
)
@

Regarding owned population parameters, the number of births and abandonment and replacement rates (\texttt{b1, ab, v}) were obtained from \texttt{estimates} object. Death and sterilization rates for females and males (\texttt{df1, sf1, dm1, sm1}) were obtained from \texttt{estimates.f} and texttt{estimates.m} objects. Mean harem size (\texttt{h1}) was set acording to literature (Ferreira, 2010). Carrying capacity ((\texttt{k1}) was defined as 10 \% greater than the current population size. For the stray population, the number of births ((\texttt{b2}) was set as 15 \% of the corresponding value in owned population and death rates ((\texttt{df2, dm2}) was set as 15 \% greater than corresponding parameters in owned population. Carrying capacity ((\texttt{k2}) was 10 \% greater than the current population size and mean harem size ((\texttt{h2}) reflected a polyandrous mating system. Adoption rates was arbitray set as 10 \%. The proportion of adopted dogs estimated in \texttt{estimates} was not used because this also include those dogs that make internal fluxes within owned population.



Now, run the model for 30 years
<<iasa.py>>=
iasa.pt <- iasa(pars = pars.iasa,
                state = state.iasa,
                time = 0:30)
@

and plot the results for owned and stray populations.
<<iasa.pt plot>>=
plotmodel(iasa.pt, variable = "N1")
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotmodel(iasa.pt, variable = "N1"))
@
\end{center}
<<iasa.pt plot>>=
plotmodel(iasa.pt, variable = "N2")
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotmodel(iasa.pt, variable = "N2"))
@
\end{center}
\subsection{Global sensitivity analysis}
Previous figures represent the combination of parameters offered as a possibility. But what are the consequences of using the wrong values? To answer this question, make a global sensitivity analysis, varying the values in a range 10 \% (for example) greater and lesser than the point estimates.

Define the ranges.
<<setranges>>=
(par.rg.iasa10 = setranges(pars.iasa))
@

Because some parameters are small quantities, thier ranges are also small. An alternative is to use the estimated confidence intervals to build the ranges (see the \texttt{setranges} help page). \texttt{setranges} returns a \texttt{data.frame} and this means that you can define the ranges as you want.

Calculate and plot the global sensitivities for each parameter and for the combination of all parameters. First, analyse owned population sensitivities.
<<global n1>>=
glob.iasa.n1 = globalsens(
  model.out = iasa.pt,
  ranges = par.rg.iasa10, sensv = 'n1')
head(glob.iasa.n1)
plotglobal(glob.iasa.n1)
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotglobal(glob.iasa.n1))
@
\end{center}
<<global n1>>=
glob.iasa.all.n1 = globalsens(
  model.out = iasa.pt,
  ranges = par.rg.iasa10, sensv = 'n1', all = TRUE)
head(glob.iasa.all.n1)
plotglobal(glob.iasa.all.n1)
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotglobal(glob.iasa.all.n1))
@
\end{center}
As you can see, carrying capacity is by far the most influential parameter. Other influential parameters are abandonment rate, number of births and death, replacement and sterilizations rates. It must be noted that those parameters that were "guessed" have minimal influences on results.

Now, analyse stray population global sensitivities.
<<global n2>>=
glob.iasa.n2 = globalsens(
  model.out = iasa.pt,
  ranges = par.rg.iasa10, sensv = 'n2')
plotglobal(glob.iasa.n2)
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotglobal(glob.iasa.n2))
@
\end{center}
<<global n1>>=
glob.iasa.all.n2 = globalsens(
  model.out = iasa.pt,
  ranges = par.rg.iasa10, sensv = 'n2', all = TRUE)
plotglobal(glob.iasa.all.n2)
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotglobal(glob.iasa.all.n2))
@
\end{center}
Again, carrying capacity is the most influential parameter. A marked difference between both populations is that for the stray one, carrying capacity of the other population is influential as well as adoption rate. The number of births is of little importance and other parameters have no influence in practice.

Previous sensitivities can be interpreted in two ways. First, the more sensitive a parameter, the greater the need of precise estimates of it. Second, the more sensitive a parameter, the greater the priority in the context of population management programs.

\subsection{Local sensitivity analysis}
As a complement for global sensitivity analysis, local sensitivities allow the ranking of parameters according to their importance. Instead of using ranges, local sensitivities assess the parameters in a small space around the point estimates using the so-called sensitivity functions.

<<local iasa>>=
local.iasa.n1 = localsens(model.out = iasa.pt, sensv = 'n1')
head(local.iasa.n1)
summary(local.iasa.n1)
local.iasa.n2 = localsens(model.out = iasa.pt, sensv = 'n2')
@

Ploting the results is straightforward as usual.
<<plot local iasa>>=
plotlocal(local.iasa.n1)
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotlocal(local.iasa.n1))
@
\end{center}
<<plot local iasa>>=
plotlocal(local.iasa.n2)
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotlocal(local.iasa.n2))
@
\end{center}
\subsection{Create scenarios of intervention}
To end your first analysis, create intervention scenarios to assess the effect of different combinations of sterilization, abandonment, adoption and replacement rates. Define the minimum and maximum for each of this rates and run the model (can take few seconds or maybe minutes)

<<iasa scenarios>>=
iasa.rg <- iasa(pars = pars.iasa,
                state = state.iasa,
                time = 0:30,
                ster.range = seq(0, .5, length.out = 50),
                aban.range = c(0, .2),
                adop.range = c(0, .2),
                imm.range = c(0, .2))
@

and plot the results.
\subsection{Local sensitivity analysis}
As a complement for global sensitivity analysis, local sensitivities allow the ranking of parameters according to their importance. Instead of using ranges, local sensitivities assess the parameters in a small space around the point estimates using the so-called sensitivity functions.

<<local iasa>>=
local.iasa.n1 = localsens(model.out = iasa.pt, sensv = 'N1')
head(local.iasa.n1)
summary(local.iasa.n1)
local.iasa.n2 = localsens(model.out = iasa.pt, sensv = 'N2')
@

Ploting the results is straightforward as usual.
<<plot local iasa, echo=FALSE>>=
plotlocal(local.iasa.n1)
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotlocal(local.iasa.n1))
@
\end{center}
<<plot local iasa, echo=FALSE>>=
plotlocal(local.iasa.n2)
@
\begin{center}
<<fig=TRUE, echo=FALSE>>=
print(plotlocal(local.iasa.n2))
@
\end{center}
\subsection{Create scenarios of intervention}
To end your first analysis, create intervention scenarios to assess the effect of different combinations of sterilization, abandonment, adoption and replacement rates. Define the minimum and maximum for each of this rates and run the model (can take few seconds or maybe minutes)

<<iasa scenarios>>=
iasa.rg <- iasa(pars = pars.iasa,
                state = state.iasa,
                time = 0:30,
                ster.range = seq(0, .5, length.out = 50),
                aban.range = c(0, .2),
                adop.range = c(0, .2),
                imm.range = c(0, .2))
@

and plot the results.

plotmodel(iasa.rg, variable = 'N')


Abandonment rate produced the most noticeble changes in the size of both populations. Replacement rate is another important determinant of owned population dynamics. Adoption rates only had a relevenat impact on stray population when there was not abandonment and sterilization rate produced minimal changes and only in owned populations when ther was not abandonment.


\end{document}